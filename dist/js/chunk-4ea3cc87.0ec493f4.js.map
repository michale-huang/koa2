{"version":3,"sources":["webpack:///./src/pages/template-manage/Index.vue?d08e","webpack:///src/pages/template-manage/Index.vue","webpack:///./src/pages/template-manage/Index.vue?d182","webpack:///./src/pages/template-manage/Index.vue","webpack:///./src/mixins/paginator.js","webpack:///./src/pages/template-manage/Index.vue?b86f","webpack:///./src/api/template.js","webpack:///./src/api/dictionary.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","query","classificationName","searchData","name","slot","ref","rules","model","value","callback","$$v","$set","expression","on","addTemplate","_v","templatePage","templateTotal","columns","templateList","scopedSlots","_u","key","fn","row","index","$event","configShow","modifyShow","deleteShow","isConfigShow","configVisible","configConfirm","configCancel","staticStyle","configPage","configTotal","columnsConfig","configData","moreData","_l","item","_s","isAddTemplateShow","templateVisible","templateConfirm","templateCancel","templateData","dictionaryValue","isModifyTemplateShow","modifyVisible","modifyConfirm","modifyCancel","isDelTemplateShow","delTemplateVisible","delTemplateData","staticRenderFns","component","props","page","default","data","total","perpage","mounted","dataInit","watch","$route","methods","paginatorInit","apiTemplateQuery","postRequest","baseUrl","apiTemplateBasicClassificationQuery","getRequest","apiTemplateBasicClassifitionUpdate","delTemplateBasic","apiTemplateRelDataQuery","apiTemplateDataQuery","apiTemplateDataAdd","apiTemplateDataDel","getTemplateDataQuery","apiTemplateDataUpdate","apiDictionaryTypeQueryList","apiDictionaryTypeAdd","path","apiDictionaryTypeDelete","apiDictionaryTypeUpdate","apiDictionaryAdd","apiDictionaryDeleteById","apiDictionaryQueryListByKeyAndType","apiDictionaryUpdate","apiDictionaryQueryByCacheTypeKey"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,oBAAoB,CAACE,YAAY,YAAYC,MAAM,CAAC,aAAe,CAACC,MAAO,CAACC,mBAAmBT,EAAIU,WAAWC,SAAS,CAACP,EAAG,WAAW,CAACQ,KAAK,mBAAmB,CAACR,EAAG,OAAO,CAACS,IAAI,eAAeN,MAAM,CAAC,MAAQP,EAAIU,WAAW,MAAQV,EAAIc,MAAM,cAAc,KAAK,CAACV,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,SAAS,CAACH,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,OAAO,UAAY,IAAIQ,MAAM,CAACC,MAAOhB,EAAIU,WAAe,KAAEO,SAAS,SAAUC,GAAMlB,EAAImB,KAAKnB,EAAIU,WAAY,OAAQQ,IAAME,WAAW,sBAAsB,IAAI,IAAI,IAAI,GAAGhB,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,aAAa,CAACA,EAAG,SAAS,CAACiB,GAAG,CAAC,MAAQrB,EAAIsB,cAAc,CAACtB,EAAIuB,GAAG,QAAQnB,EAAG,OAAO,CAACG,MAAM,CAAC,KAAO,6BAA6B,IAAI,GAAGH,EAAG,gBAAgB,CAACG,MAAM,CAAC,cAAgBP,EAAIwB,aAAa,QAAUxB,EAAIyB,cAAc,KAAO,uBAAuB,GAAG,CAACrB,EAAG,QAAQ,CAACG,MAAM,CAAC,QAAUP,EAAI0B,QAAQ,KAAO1B,EAAI2B,cAAcC,YAAY5B,EAAI6B,GAAG,CAAC,CAACC,IAAI,SAASC,GAAG,SAASlB,GACxkC,IAAImB,EAAMnB,EAAImB,IACVC,EAAQpB,EAAIoB,MAChB,MAAO,CAAC7B,EAAG,OAAO,CAACG,MAAM,CAAC,KAAO,uBAAuBc,GAAG,CAAC,MAAQ,SAASa,GAAQ,OAAOlC,EAAImC,WAAWH,OAAS5B,EAAG,OAAO,CAACG,MAAM,CAAC,KAAO,qBAAqBc,GAAG,CAAC,MAAQ,SAASa,GAAQ,OAAOlC,EAAIoC,WAAWJ,EAAIC,OAAW7B,EAAG,OAAO,CAACG,MAAM,CAAC,KAAO,aAAac,GAAG,CAAC,MAAQ,SAASa,GAAQ,OAAOlC,EAAIqC,WAAWL,gBAAkB,GAAG,CAAC5B,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,MAAQ,MAAM,UAAYP,EAAIsC,cAAcjB,GAAG,CAAC,oBAAoBrB,EAAIuC,cAAc,QAAQvC,EAAIwC,cAAc,YAAYxC,EAAIyC,eAAe,CAACrC,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,OAAO,CAACE,YAAY,iBAAiB,CAACN,EAAIuB,GAAG,kBAAkBnB,EAAG,OAAO,CAACJ,EAAIuB,GAAG,oBAAoBnB,EAAG,gBAAgB,CAACsC,YAAY,CAAC,QAAU,eAAe,MAAQ,SAASnC,MAAM,CAAC,cAAgBP,EAAI2C,WAAW,QAAU3C,EAAI4C,YAAY,KAAO,uBAAuB,GAAGxC,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,QAAQ,QAAUP,EAAI6C,cAAc,KAAO7C,EAAI8C,WAAW,OAAS,OAAOlB,YAAY5B,EAAI6B,GAAG,CAAC,CAACC,IAAI,eAAeC,GAAG,SAASlB,GAC7/BA,EAAImB,IACFnB,EAAIoB,MAChB,MAAO,CAAC7B,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,OAAO,UAAY,QAAQ3B,MAAM,CAACC,MAAOhB,EAAY,SAAEiB,SAAS,SAAUC,GAAMlB,EAAI+C,SAAS7B,GAAKE,WAAW,aAAapB,EAAIgD,GAAIhD,EAAgB,cAAE,SAASiD,EAAKnB,GAAK,OAAO1B,EAAG,SAAS,CAAC0B,IAAIA,EAAIY,YAAY,CAAC,UAAY,QAAQnC,MAAM,CAAC,MAAQ0C,EAAKjC,QAAQ,CAAChB,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKjC,aAAY,MAAM,CAACc,IAAI,SAASC,GAAG,SAASlB,GAChWA,EAAImB,IACFnB,EAAIoB,MAChB,MAAO,CAAC7B,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,OAAO,UAAY,QAAQ3B,MAAM,CAACC,MAAOhB,EAAY,SAAEiB,SAAS,SAAUC,GAAMlB,EAAI+C,SAAS7B,GAAKE,WAAW,aAAapB,EAAIgD,GAAIhD,EAAgB,cAAE,SAASiD,EAAKnB,GAAK,OAAO1B,EAAG,SAAS,CAAC0B,IAAIA,EAAIY,YAAY,CAAC,UAAY,QAAQnC,MAAM,CAAC,MAAQ0C,EAAKjC,QAAQ,CAAChB,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKjC,aAAY,MAAM,CAACc,IAAI,SAASC,GAAG,SAASlB,GAChWA,EAAImB,IACFnB,EAAIoB,MAChB,MAAO,CAAC7B,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,OAAO,UAAY,QAAQ3B,MAAM,CAACC,MAAOhB,EAAY,SAAEiB,SAAS,SAAUC,GAAMlB,EAAI+C,SAAS7B,GAAKE,WAAW,aAAapB,EAAIgD,GAAIhD,EAAgB,cAAE,SAASiD,EAAKnB,GAAK,OAAO1B,EAAG,SAAS,CAAC0B,IAAIA,EAAIY,YAAY,CAAC,UAAY,QAAQnC,MAAM,CAAC,MAAQ0C,EAAKjC,QAAQ,CAAChB,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKjC,aAAY,MAAM,CAACc,IAAI,SAASC,GAAG,SAASlB,GAChWA,EAAImB,IACFnB,EAAIoB,MAChB,MAAO,CAAC7B,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,OAAO,UAAY,QAAQ3B,MAAM,CAACC,MAAOhB,EAAY,SAAEiB,SAAS,SAAUC,GAAMlB,EAAI+C,SAAS7B,GAAKE,WAAW,aAAapB,EAAIgD,GAAIhD,EAAgB,cAAE,SAASiD,EAAKnB,GAAK,OAAO1B,EAAG,SAAS,CAAC0B,IAAIA,EAAIY,YAAY,CAAC,UAAY,QAAQnC,MAAM,CAAC,MAAQ0C,EAAKjC,QAAQ,CAAChB,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKjC,aAAY,SAAS,CAACZ,EAAG,WAAW,CAACQ,KAAK,WAAW,CAACR,EAAG,QAAQ,CAACsC,YAAY,CAAC,MAAQ,SAASnC,MAAM,CAAC,YAAc,WAAWQ,MAAM,CAACC,MAAOhB,EAAS,MAAEiB,SAAS,SAAUC,GAAMlB,EAAIgB,MAAME,GAAKE,WAAW,YAAY,GAAGhB,EAAG,WAAW,CAACQ,KAAK,QAAQ,CAACR,EAAG,QAAQ,CAACsC,YAAY,CAAC,MAAQ,QAAQnC,MAAM,CAAC,YAAc,IAAIQ,MAAM,CAACC,MAAOhB,EAAS,MAAEiB,SAAS,SAAUC,GAAMlB,EAAIgB,MAAME,GAAKE,WAAW,YAAY,IAAI,IAAI,MAAM,CAAChB,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,MAAQ,MAAM,UAAYP,EAAImD,mBAAmB9B,GAAG,CAAC,oBAAoBrB,EAAIoD,gBAAgB,QAAQpD,EAAIqD,gBAAgB,YAAYrD,EAAIsD,iBAAiB,CAAClD,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,OAAO,CAACS,IAAI,cAAcN,MAAM,CAAC,MAAQP,EAAIuD,aAAa,iBAAiB,OAAO,cAAc,MAAM,CAACnD,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,uBAAuB,CAACH,EAAG,QAAQ,CAACW,MAAM,CAACC,MAAOhB,EAAIuD,aAA+B,mBAAEtC,SAAS,SAAUC,GAAMlB,EAAImB,KAAKnB,EAAIuD,aAAc,qBAAsBrC,IAAME,WAAW,sCAAsC,GAAGhB,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,UAAU,CAACH,EAAG,MAAM,CAACE,YAAY,iBAAiBN,EAAIgD,GAAIhD,EAAIuD,aAAwB,aAAE,SAASN,EAAKnB,GAAK,OAAO1B,EAAG,WAAW,CAAC0B,IAAIA,EAAIvB,MAAM,CAAC,MAAQ0C,EAAKO,gBAAgB,KAAO,uBAAuB,CAACpD,EAAG,QAAQ,CAACW,MAAM,CAACC,MAAOiC,EAAuB,mBAAEhC,SAAS,SAAUC,GAAMlB,EAAImB,KAAK8B,EAAM,qBAAsB/B,IAAME,WAAW,8BAA8B,MAAK,KAAKhB,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,cAAc,CAACH,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,SAAS3B,MAAM,CAACC,MAAOhB,EAAIuD,aAAsB,UAAEtC,SAAS,SAAUC,GAAMlB,EAAImB,KAAKnB,EAAIuD,aAAc,YAAarC,IAAME,WAAW,2BAA2BpB,EAAIgD,GAAIhD,EAAIuD,aAAoB,SAAE,SAASN,GAAM,OAAO7C,EAAG,SAAS,CAAC0B,IAAImB,EAAKO,gBAAgBjD,MAAM,CAAC,MAAQ0C,EAAKO,kBAAkB,CAACxD,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKO,uBAAsB,IAAI,IAAI,IAAI,MAAM,CAACpD,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQ,OAAO,MAAQ,MAAM,UAAYP,EAAIyD,sBAAsBpC,GAAG,CAAC,oBAAoBrB,EAAI0D,cAAc,QAAQ1D,EAAI2D,cAAc,YAAY3D,EAAI4D,eAAe,CAACxD,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,OAAO,CAACS,IAAI,cAAcN,MAAM,CAAC,MAAQP,EAAIuD,aAAa,iBAAiB,OAAO,cAAc,MAAM,CAACnD,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,uBAAuB,CAACH,EAAG,QAAQ,CAACG,MAAM,CAAC,SAAW,IAAIQ,MAAM,CAACC,MAAOhB,EAAIuD,aAA+B,mBAAEtC,SAAS,SAAUC,GAAMlB,EAAImB,KAAKnB,EAAIuD,aAAc,qBAAsBrC,IAAME,WAAW,sCAAsC,GAAGhB,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,UAAU,CAACH,EAAG,MAAM,CAACE,YAAY,iBAAiBN,EAAIgD,GAAIhD,EAAIuD,aAAwB,aAAE,SAASN,EAAKnB,GAAK,OAAO1B,EAAG,WAAW,CAAC0B,IAAIA,EAAIvB,MAAM,CAAC,MAAQ0C,EAAKO,gBAAgB,KAAO,uBAAuB,CAACpD,EAAG,QAAQ,CAACW,MAAM,CAACC,MAAOiC,EAAuB,mBAAEhC,SAAS,SAAUC,GAAMlB,EAAImB,KAAK8B,EAAM,qBAAsB/B,IAAME,WAAW,8BAA8B,MAAK,KAAKhB,EAAG,WAAW,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,cAAc,CAACH,EAAG,SAAS,CAACsC,YAAY,CAAC,MAAQ,SAAS3B,MAAM,CAACC,MAAOhB,EAAIuD,aAAsB,UAAEtC,SAAS,SAAUC,GAAMlB,EAAImB,KAAKnB,EAAIuD,aAAc,YAAarC,IAAME,WAAW,2BAA2BpB,EAAIgD,GAAIhD,EAAIuD,aAAoB,SAAE,SAASN,GAAM,OAAO7C,EAAG,SAAS,CAAC0B,IAAImB,EAAKO,gBAAgBjD,MAAM,CAAC,MAAQ0C,EAAKO,kBAAkB,CAACxD,EAAIuB,GAAGvB,EAAIkD,GAAGD,EAAKO,uBAAsB,IAAI,IAAI,IAAI,MAAMpD,EAAG,sBAAsB,CAACG,MAAM,CAAC,UAAYP,EAAI6D,mBAAmBxC,GAAG,CAAC,oBAAoBrB,EAAI8D,mBAAmB,QAAQ9D,EAAI+D,oBAAoB,IACpuHC,EAAkB,G,oEC2JtB,GACE,OAAF,SACE,KAAF,iBACE,KAHF,WAII,MAAJ,CAEM,aAAN,EACM,cAAN,EACM,WAAN,EACM,YAAN,EACM,aAAN,GAEM,MAAN,GACM,SAAN,GACM,aAAN,CACA,CAAQ,MAAR,KACA,CAAQ,MAAR,MAEM,mBAAN,EACM,cAAN,EACM,mBAAN,EACM,sBAAN,EACM,WAAN,CACQ,KAAR,IAEM,aAAN,CACQ,mBAAR,GACQ,KAAR,GACQ,YAAR,GACQ,UAAR,GACQ,QAAR,GACQ,KAAR,IAEM,MAAN,CACQ,KAAR,CACA,CAAU,UAAV,GAAU,QAAV,UAGM,QAAN,CACA,CAAQ,MAAR,OAAQ,MAAR,IAAQ,IAAR,qBAAQ,MAAR,UACA,CAAQ,MAAR,OAAQ,IAAR,qBAAQ,MAAR,IAAQ,MAAR,UACA,CAAQ,MAAR,KAAQ,KAAR,SAAQ,MAAR,WAEM,cAAN,CACA,CAAQ,KAAR,YAAQ,MAAR,GAAQ,MAAR,UACA,CAAQ,MAAR,QAAQ,IAAR,OAAQ,MAAR,UACA,CAAQ,MAAR,QAAQ,IAAR,QAAQ,MAAR,UACA,CAAQ,MAAR,KAAQ,IAAR,OAAQ,MAAR,QACA,CAAQ,MAAR,UAAQ,IAAR,SAAQ,MAAR,SAAQ,KAAR,UACA,CAAQ,MAAR,QAAQ,IAAR,eAAQ,MAAR,SAAQ,KAAR,gBACA,CAAQ,MAAR,OAAQ,IAAR,SAAQ,MAAR,SAAQ,KAAR,UACA,CAAQ,MAAR,OAAQ,IAAR,SAAQ,MAAR,SAAQ,KAAR,UACA,CAAQ,MAAR,OAAQ,IAAR,UAAQ,MAAR,SAAQ,KAAR,WACA,CAAQ,MAAR,MAAQ,IAAR,OAAQ,MAAR,SAAQ,KAAR,SAEM,WAAN,GACM,aAAN,GAEM,WAAN,KAGE,QA7DF,WA+DI,KAAJ,oBAEI,KAAJ,YAEE,QAAF,CAEI,SAFJ,WAGM,KAAN,qBAGI,kBANJ,WAMM,IAAN,OACA,GACQ,KAAR,kBACQ,KAAR,aACQ,UAAR,GACQ,WAAR,GACQ,mBAAR,GACQ,mBAAR,sBAEM,OAAN,OAAM,CAAN,CAAQ,KAAR,sBACQ,EAAR,4BACQ,EAAR,uCAII,SArBJ,WAqBM,IAAN,OACA,GAAQ,kBAAR,iBACM,OAAN,OAAM,CAAN,qBACQ,EAAR,oBACA,yBACU,EAAV,0BACY,EAAZ,gCACY,EAAZ,4BAGQ,EAAR,mCAEM,IAAN,GAAQ,kBAAR,eACM,OAAN,OAAM,CAAN,qBACQ,QAAR,OACQ,EAAR,gCAII,YAxCJ,WAyCM,KAAN,WACM,KAAN,sBAGI,cA7CJ,SA6CA,GACM,KAAN,gBAEI,gBAhDJ,SAgDA,GACM,KAAN,qBAEI,cAnDJ,SAmDA,GACM,KAAN,wBAEI,mBAtDJ,SAsDA,GACM,KAAN,qBAGI,cA1DJ,WA2DM,QAAN,sBAMI,aAjEJ,WAkEM,KAAN,iBAGI,gBArEJ,WAsEM,IAAN,GACQ,mBAAR,qCACQ,YAAR,8BACQ,QAAR,0CACQ,KAAR,wBAEM,QAAN,QAQI,eApFJ,WAqFM,KAAN,gCACM,KAAN,sBAGI,cAzFJ,WAyFM,IAAN,OACA,GACQ,mBAAR,qCACQ,YAAR,8BACQ,QAAR,0CACQ,KAAR,wBAEM,OAAN,OAAM,CAAN,CAAQ,KAAR,sBACQ,QAAR,OACQ,EAAR,gCACQ,EAAR,wBACQ,EAAR,wBAII,aAxGJ,WAyGM,KAAN,gCACM,KAAN,yBAGI,WA7GJ,SA6GA,GAAM,IAAN,OACM,KAAN,gBACM,IAAN,GACQ,KAAR,UACQ,KAAR,aACQ,UAAR,GACQ,WAAR,GACQ,mBAAR,sBAEM,OAAN,OAAM,CAAN,CAAQ,KAAR,sBACQ,EAAR,kCACU,QAAV,kBAEQ,EAAR,0BACQ,EAAR,qCAII,WA/HJ,SA+HA,GAAM,IAAN,OACA,GAAQ,mBAAR,sBACM,OAAN,OAAM,CAAN,qBAEQ,EAAR,0DACQ,EAAR,oCACQ,EAAR,8BACQ,IAAR,KACA,iDACU,EAAV,sCACY,EAAZ,sEAGA,yCACU,EAAV,kCACY,EAAZ,gCACY,EAAZ,4CAGQ,EAAR,2CAEM,KAAN,wBACM,IAAN,GAAQ,kBAAR,eAEM,OAAN,OAAM,CAAN,qBACQ,EAAR,gCAII,gBA5JJ,SA4JA,GAAM,IAAN,OACA,GAAQ,mBAAR,iBACM,QAAN,OACM,OAAN,OAAM,CAAN,qBACQ,EAAR,yBACQ,EAAR,qBACQ,EAAR,wBAII,WAtKJ,SAsKA,GACM,KAAN,qBACM,KAAN,mCCtZkc,I,wBCQ9bC,EAAY,eACd,EACAlE,EACAiE,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,sECnBA,QACXC,MAAO,CACHC,KAAM,CAAEC,QAAS,IAErBC,KAJW,WAKP,MAAO,CACHC,MAAO,EACPC,QAAS,KAGjBC,QAVW,WAWPvE,KAAKwE,YAETC,MAAO,CACHC,OADG,WAEC1E,KAAKwE,aAGbG,QAAS,CACLC,cADK,SACUN,EAASD,GACpBrE,KAAKsE,QAAUA,EACftE,KAAKqE,MAAQA,M,kCCrBzB,yBAA2sB,EAAG,G,kCCA9sB,gXAIaQ,EAAmB,SAACT,GAC7B,OAAOU,eAAY,GAAD,OAAIC,OAAJ,iEAA4EX,IAOrFY,EAAsC,SAACZ,GAChD,OAAOa,eAAW,GAAD,OAAIF,OAAJ,iEAA4EX,IAGpFc,EAAqC,SAACd,GAC/C,OAAOU,eAAY,GAAD,OAAIC,OAAJ,gEAA2EX,IAGpFe,EAAmB,SAACf,GAC7B,OAAOa,eAAW,GAAD,OAAIF,OAAJ,iDAA4DX,IAGpEgB,EAA0B,SAAChB,GACpC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,qDAAgEX,IAQzEiB,EAAuB,SAACjB,GACjC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,mCAA8CX,IAGvDkB,EAAqB,SAAClB,GAC/B,OAAOU,eAAY,GAAD,OAAIC,OAAJ,iCAA4CX,IAGrDmB,EAAqB,SAACnB,GAC/B,OAAOa,eAAW,GAAD,OAAIF,OAAJ,iCAA4CX,IAGpDoB,EAAuB,SAACpB,GACjC,OAAOa,eAAW,GAAD,OAAIF,OAAJ,mCAA8CX,IAGtDqB,EAAwB,SAACrB,GAClC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,oCAA+CX,K,kCClDrE,8UAIasB,EAA6B,SAACtB,GACvC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,2CAAsDX,IAI/DuB,EAAuB,SAACC,GACjC,OAAOd,eAAY,GAAD,OAAIC,OAAJ,qCAAgDa,IAIzDC,EAA0B,SAACzB,GACpC,OAAOa,eAAW,GAAD,OAAIF,OAAJ,wCAAmDX,IAmB3D0B,EAA0B,SAAC1B,GACpC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,wCAAmDX,IAI5D2B,EAAmB,SAAC3B,GAC7B,OAAOU,eAAY,GAAD,OAAIC,OAAJ,6BAAwCX,IAIjD4B,EAA0B,SAAC5B,GACpC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,qCAAgDX,IA6BzD6B,EAAqC,SAAC7B,GAC/C,OAAOU,eAAY,GAAD,OAAIC,OAAJ,+CAA0DX,IAInE8B,EAAsB,SAAC9B,GAChC,OAAOU,eAAY,GAAD,OAAIC,OAAJ,gCAA2CX,IAIpD+B,EAAmC,SAAC/B,GAC7C,OAAOa,eAAW,GAAD,OAAIF,OAAJ,wDAAmEX","file":"js/chunk-4ea3cc87.0ec493f4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"template-manage\"},[_c('adt-search-folder',{staticClass:\"query-tit\",attrs:{\"searchRouter\":{query: {classificationName:_vm.searchData.name}}}},[_c('template',{slot:\"table-btn-group\"},[_c('Form',{ref:\"templateForm\",attrs:{\"model\":_vm.searchData,\"rules\":_vm.rules,\"label-width\":80}},[_c('FormItem',{attrs:{\"label\":\"模版名称：\",\"prop\":\"name\"}},[_c('Input',{attrs:{\"type\":\"text\",\"clearable\":\"\"},model:{value:(_vm.searchData.name),callback:function ($$v) {_vm.$set(_vm.searchData, \"name\", $$v)},expression:\"searchData.name\"}})],1)],1)],1)],2),_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"btns-paginator\"},[_c('adt-button',[_c('Button',{on:{\"click\":_vm.addTemplate}},[_vm._v(\"新增模版\"),_c('Icon',{attrs:{\"type\":\"ios-add-circle-outline\"}})],1)],1),_c('adt-paginator',{attrs:{\"currentPage\":~~_vm.templatePage,\"total\":~~_vm.templateTotal,\"path\":\"/template-manage\"}})],1),[_c('Table',{attrs:{\"columns\":_vm.columns,\"data\":_vm.templateList},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Icon',{attrs:{\"type\":\"ios-options-outline\"},on:{\"click\":function($event){return _vm.configShow(row)}}}),_c('Icon',{attrs:{\"type\":\"ios-brush-outline\"},on:{\"click\":function($event){return _vm.modifyShow(row,index)}}}),_c('Icon',{attrs:{\"type\":\"ios-close\"},on:{\"click\":function($event){return _vm.deleteShow(row)}}})]}}])})]],2),[_c('adt-my-modal',{attrs:{\"title\":\"配置模版\",\"width\":\"90%\",\"showModal\":_vm.isConfigShow},on:{\"on-visible-change\":_vm.configVisible,\"on-ok\":_vm.configConfirm,\"on-cancel\":_vm.configCancel}},[_c('div',{staticClass:\"modal-title\"},[_c('span',{staticClass:\"template-name\"},[_vm._v(\"模版名称：物流设置服务 \")]),_c('span',[_vm._v(\"模版编号：123098787\")]),_c('adt-paginator',{staticStyle:{\"display\":\"inline-block\",\"float\":\"right\"},attrs:{\"currentPage\":~~_vm.configPage,\"total\":~~_vm.configTotal,\"path\":\"/template-manage\"}})],1),_c('div',{staticClass:\"relevance-data\"},[_c('Table',{attrs:{\"size\":\"small\",\"columns\":_vm.columnsConfig,\"data\":_vm.configData,\"height\":\"400\"},scopedSlots:_vm._u([{key:\"relationData\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Select',{staticStyle:{\"width\":\"80px\",\"textAlign\":\"left\"},model:{value:(_vm.moreData),callback:function ($$v) {_vm.moreData=$$v},expression:\"moreData\"}},_vm._l((_vm.relationData),function(item,key){return _c('Option',{key:key,staticStyle:{\"textAlign\":\"left\"},attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.value))])}),1)]}},{key:\"isMore\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Select',{staticStyle:{\"width\":\"80px\",\"textAlign\":\"left\"},model:{value:(_vm.moreData),callback:function ($$v) {_vm.moreData=$$v},expression:\"moreData\"}},_vm._l((_vm.relationData),function(item,key){return _c('Option',{key:key,staticStyle:{\"textAlign\":\"left\"},attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.value))])}),1)]}},{key:\"isShow\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Select',{staticStyle:{\"width\":\"80px\",\"textAlign\":\"left\"},model:{value:(_vm.moreData),callback:function ($$v) {_vm.moreData=$$v},expression:\"moreData\"}},_vm._l((_vm.relationData),function(item,key){return _c('Option',{key:key,staticStyle:{\"textAlign\":\"left\"},attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.value))])}),1)]}},{key:\"isEdit\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('Select',{staticStyle:{\"width\":\"80px\",\"textAlign\":\"left\"},model:{value:(_vm.moreData),callback:function ($$v) {_vm.moreData=$$v},expression:\"moreData\"}},_vm._l((_vm.relationData),function(item,key){return _c('Option',{key:key,staticStyle:{\"textAlign\":\"left\"},attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.value))])}),1)]}}])},[_c('template',{slot:\"message\"},[_c('Input',{staticStyle:{\"width\":\"112px\"},attrs:{\"placeholder\":\"请输入提示信息\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1),_c('template',{slot:\"sort\"},[_c('Input',{staticStyle:{\"width\":\"40px\"},attrs:{\"placeholder\":\"\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)],2)],1)])],[_c('adt-my-modal',{attrs:{\"title\":\"新增模版\",\"width\":\"30%\",\"showModal\":_vm.isAddTemplateShow},on:{\"on-visible-change\":_vm.templateVisible,\"on-ok\":_vm.templateConfirm,\"on-cancel\":_vm.templateCancel}},[_c('div',{staticClass:\"template-modal\"},[_c('Form',{ref:\"templateRef\",attrs:{\"model\":_vm.templateData,\"label-position\":\"left\",\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"模版编码：\",\"prop\":\"classificationCode\"}},[_c('Input',{model:{value:(_vm.templateData.classificationCode),callback:function ($$v) {_vm.$set(_vm.templateData, \"classificationCode\", $$v)},expression:\"templateData.classificationCode\"}})],1),_c('FormItem',{attrs:{\"label\":\"模版名称：\"}},[_c('div',{staticClass:\"template-name\"},_vm._l((_vm.templateData.nameAndLang),function(item,key){return _c('FormItem',{key:key,attrs:{\"label\":item.dictionaryValue,\"prop\":\"classificationName\"}},[_c('Input',{model:{value:(item.classificationName),callback:function ($$v) {_vm.$set(item, \"classificationName\", $$v)},expression:\"item.classificationName\"}})],1)}),1)]),_c('FormItem',{attrs:{\"label\":\"页面组建：\",\"prop\":\"pageBuild\"}},[_c('Select',{staticStyle:{\"width\":\"162px\"},model:{value:(_vm.templateData.pageBuild),callback:function ($$v) {_vm.$set(_vm.templateData, \"pageBuild\", $$v)},expression:\"templateData.pageBuild\"}},_vm._l((_vm.templateData.compont),function(item){return _c('Option',{key:item.dictionaryValue,attrs:{\"value\":item.dictionaryValue}},[_vm._v(_vm._s(item.dictionaryValue))])}),1)],1)],1)],1)])],[_c('adt-my-modal',{attrs:{\"title\":\"修改模版\",\"width\":\"30%\",\"showModal\":_vm.isModifyTemplateShow},on:{\"on-visible-change\":_vm.modifyVisible,\"on-ok\":_vm.modifyConfirm,\"on-cancel\":_vm.modifyCancel}},[_c('div',{staticClass:\"template-modal\"},[_c('Form',{ref:\"templateRef\",attrs:{\"model\":_vm.templateData,\"label-position\":\"left\",\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"模版编码：\",\"prop\":\"classificationCode\"}},[_c('Input',{attrs:{\"disabled\":\"\"},model:{value:(_vm.templateData.classificationCode),callback:function ($$v) {_vm.$set(_vm.templateData, \"classificationCode\", $$v)},expression:\"templateData.classificationCode\"}})],1),_c('FormItem',{attrs:{\"label\":\"模版名称：\"}},[_c('div',{staticClass:\"template-name\"},_vm._l((_vm.templateData.nameAndLang),function(item,key){return _c('FormItem',{key:key,attrs:{\"label\":item.dictionaryValue,\"prop\":\"classificationName\"}},[_c('Input',{model:{value:(item.classificationName),callback:function ($$v) {_vm.$set(item, \"classificationName\", $$v)},expression:\"item.classificationName\"}})],1)}),1)]),_c('FormItem',{attrs:{\"label\":\"页面组建：\",\"prop\":\"pageBuild\"}},[_c('Select',{staticStyle:{\"width\":\"162px\"},model:{value:(_vm.templateData.pageBuild),callback:function ($$v) {_vm.$set(_vm.templateData, \"pageBuild\", $$v)},expression:\"templateData.pageBuild\"}},_vm._l((_vm.templateData.compont),function(item){return _c('Option',{key:item.dictionaryValue,attrs:{\"value\":item.dictionaryValue}},[_vm._v(_vm._s(item.dictionaryValue))])}),1)],1)],1)],1)])],_c('adt-reconfirm-modal',{attrs:{\"showModal\":_vm.isDelTemplateShow},on:{\"on-visible-change\":_vm.delTemplateVisible,\"on-ok\":_vm.delTemplateData}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"template-manage\">\r\n        <adt-search-folder :searchRouter=\"{query: {classificationName:searchData.name}}\" class=\"query-tit\">\r\n            <template slot=\"table-btn-group\">\r\n                <Form ref=\"templateForm\" :model=\"searchData\" :rules=\"rules\" :label-width=\"80\">\r\n                    <FormItem label=\"模版名称：\" prop=\"name\">\r\n                        <Input type=\"text\" v-model=\"searchData.name\" clearable></Input>\r\n                    </FormItem>\r\n                </Form>\r\n            </template>\r\n        </adt-search-folder>\r\n        <!-- 下面的表格内容 -->\r\n        <div class=\"content\">\r\n            <div class=\"btns-paginator\">\r\n                <adt-button>\r\n                    <Button @click=\"addTemplate\">新增模版<Icon type=\"ios-add-circle-outline\" /></Button>\r\n                </adt-button>\r\n                <adt-paginator :currentPage=\"~~templatePage\" :total=\"~~templateTotal\" path=\"/template-manage\" />\r\n            </div>\r\n            <template class=\"table-data\">\r\n                <Table :columns=\"columns\" :data=\"templateList\">\r\n                    <template slot-scope=\"{ row, index }\" slot=\"action\">\r\n                        <Icon type=\"ios-options-outline\" @click=\"configShow(row)\"/>\r\n                        <Icon type=\"ios-brush-outline\" @click=\"modifyShow(row,index)\" />\r\n                        <Icon type=\"ios-close\" @click=\"deleteShow(row)\"/>\r\n                    </template>\r\n                </Table>\r\n            </template>\r\n        </div>\r\n        <!-- 配置模版弹框 -->\r\n        <template class=\"config-modal\">\r\n            <adt-my-modal title=\"配置模版\"\r\n                width=\"90%\"\r\n                :showModal=\"isConfigShow\"\r\n                @on-visible-change=\"configVisible\"\r\n                @on-ok=\"configConfirm\"\r\n                @on-cancel=\"configCancel\">\r\n                <div class=\"modal-title\">\r\n                    <span class=\"template-name\">模版名称：物流设置服务 </span>\r\n                    <span>模版编号：123098787</span>\r\n                    <adt-paginator style=\"display:inline-block;float:right\" :currentPage=\"~~configPage\" :total=\"~~configTotal\" path=\"/template-manage\" />\r\n                </div>\r\n                <div class=\"relevance-data\">\r\n                    <Table size=\"small\" :columns=\"columnsConfig\" :data=\"configData\" height=\"400\">\r\n                        <!-- 关联数据项 -->\r\n                        <template slot-scope=\"{ row, index }\" slot=\"relationData\">\r\n                            <Select v-model=\"moreData\" style=\"width:80px;textAlign: left;\">\r\n                                <Option v-for=\"(item, key) in relationData\"\r\n                                    :value=\"item.value\"\r\n                                    :key=\"key\"\r\n                                    style=\"textAlign: left;\"\r\n                                >{{ item.value }}</Option>\r\n                            </Select>\r\n                        </template>\r\n                        <!-- 是否多条数据项 -->\r\n                        <template slot-scope=\"{ row, index }\" slot=\"isMore\">\r\n                            <Select v-model=\"moreData\" style=\"width:80px;textAlign: left;\">\r\n                                <Option v-for=\"(item, key) in relationData\"\r\n                                    :value=\"item.value\"\r\n                                    :key=\"key\"\r\n                                    style=\"textAlign: left;\"\r\n                                >{{ item.value }}</Option>\r\n                            </Select>\r\n                        </template>\r\n                        <!-- 是否展示 -->\r\n                        <template slot-scope=\"{ row, index }\" slot=\"isShow\">\r\n                            <Select v-model=\"moreData\" style=\"width:80px;textAlign: left;\">\r\n                                <Option v-for=\"(item, key) in relationData\"\r\n                                    :value=\"item.value\"\r\n                                    :key=\"key\"\r\n                                    style=\"textAlign: left;\"\r\n                                >{{ item.value }}</Option>\r\n                            </Select>\r\n                        </template>\r\n                        <!-- 是否编辑 -->\r\n                        <template slot-scope=\"{ row, index }\" slot=\"isEdit\">\r\n                            <Select v-model=\"moreData\" style=\"width:80px;textAlign: left;\">\r\n                                <Option v-for=\"(item, key) in relationData\"\r\n                                    :value=\"item.value\"\r\n                                    :key=\"key\"\r\n                                    style=\"textAlign: left;\"\r\n                                >{{ item.value }}</Option>\r\n                            </Select>\r\n                        </template>\r\n                        <!-- 提示信息 -->\r\n                        <template slot=\"message\">\r\n                            <Input v-model=\"value\" placeholder=\"请输入提示信息\" style=\"width: 112px\" />\r\n                        </template>\r\n                        <!-- 排序值 -->\r\n                        <template slot=\"sort\">\r\n                            <Input v-model=\"value\" placeholder=\"\" style=\"width: 40px\" />\r\n                        </template>\r\n                    </Table>\r\n                </div>\r\n            </adt-my-modal>\r\n        </template>\r\n        <!-- 新增模版 -->\r\n        <template class=\"add-template-modal\">\r\n            <adt-my-modal title=\"新增模版\"\r\n                width=\"30%\"\r\n                :showModal=\"isAddTemplateShow\"\r\n                @on-visible-change=\"templateVisible\"\r\n                @on-ok=\"templateConfirm\"\r\n                @on-cancel=\"templateCancel\">\r\n                <div class=\"template-modal\">\r\n                    <Form ref=\"templateRef\" :model=\"templateData\" label-position=\"left\" :label-width=\"100\">\r\n                        <FormItem label=\"模版编码：\" prop=\"classificationCode\">\r\n                            <Input v-model=\"templateData.classificationCode\"></Input>\r\n                        </FormItem>\r\n                        <FormItem label=\"模版名称：\">\r\n                            <div class=\"template-name\">\r\n                                <FormItem v-for=\"(item, key) in templateData.nameAndLang\" :key=\"key\" :label=\"item.dictionaryValue\" prop=\"classificationName\">\r\n                                    <Input v-model=\"item.classificationName\"></Input>\r\n                                </FormItem>\r\n                            </div>\r\n                        </FormItem>\r\n                        <FormItem label=\"页面组建：\" prop=\"pageBuild\">\r\n                            <Select v-model=\"templateData.pageBuild\" style=\"width:162px\">\r\n                                <Option v-for=\"item in templateData.compont\" :value=\"item.dictionaryValue\" :key=\"item.dictionaryValue\">{{ item.dictionaryValue }}</Option>\r\n                            </Select>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </adt-my-modal>\r\n        </template>\r\n        <!-- 修改模版 -->\r\n        <template class=\"add-template-modal\">\r\n            <adt-my-modal title=\"修改模版\"\r\n                width=\"30%\"\r\n                :showModal=\"isModifyTemplateShow\"\r\n                @on-visible-change=\"modifyVisible\"\r\n                @on-ok=\"modifyConfirm\"\r\n                @on-cancel=\"modifyCancel\">\r\n                <div class=\"template-modal\">\r\n                    <Form ref=\"templateRef\" :model=\"templateData\" label-position=\"left\" :label-width=\"100\">\r\n                        <FormItem label=\"模版编码：\" prop=\"classificationCode\">\r\n                            <Input disabled v-model=\"templateData.classificationCode\"></Input>\r\n                        </FormItem>\r\n                        <FormItem label=\"模版名称：\">\r\n                            <div class=\"template-name\">\r\n                                <FormItem v-for=\"(item, key) in templateData.nameAndLang\" :key=\"key\" :label=\"item.dictionaryValue\" prop=\"classificationName\">\r\n                                    <Input v-model=\"item.classificationName\"></Input>\r\n                                </FormItem>\r\n                            </div>\r\n                        </FormItem>\r\n                        <FormItem label=\"页面组建：\" prop=\"pageBuild\">\r\n                            <Select v-model=\"templateData.pageBuild\" style=\"width:162px\">\r\n                                <Option v-for=\"item in templateData.compont\" :value=\"item.dictionaryValue\" :key=\"item.dictionaryValue\">{{ item.dictionaryValue }}</Option>\r\n                            </Select>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </adt-my-modal>\r\n        </template>\r\n        <adt-reconfirm-modal :showModal=\"isDelTemplateShow\" @on-visible-change=\"delTemplateVisible\" @on-ok=\"delTemplateData\"></adt-reconfirm-modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    delTemplateBasic,\r\n    apiTemplateQuery,\r\n    apiTemplateRelDataAdd,\r\n    apiTemplateRelDataQuery,\r\n    apiTemplateBasicClassificationAdd,\r\n    apiTemplateBasicClassificationQuery,\r\n    apiTemplateBasicClassifitionUpdate,\r\n} from '@/api/template.js'\r\nimport { apiDictionaryQueryByCacheTypeKey } from '@/api/dictionary.js'\r\n\r\nimport paginator from '@/mixins/paginator'\r\nexport default {\r\n    mixins: [paginator],\r\n    name: 'templateManage',\r\n    data() {\r\n        return {\r\n            // 分页初始化数据\r\n            templatePage: 1,\r\n            templateTotal: 1,\r\n            configPage: 1,\r\n            configTotal: 1,\r\n            languageType: [],\r\n            // 提示信息的value\r\n            value: '',\r\n            moreData: '',\r\n            relationData: [\r\n                {value: '是'},\r\n                {value: '否'}\r\n            ],\r\n            isDelTemplateShow: false,\r\n            isConfigShow: false,\r\n            isAddTemplateShow: false,\r\n            isModifyTemplateShow: false,\r\n            searchData: {\r\n                name: ''\r\n            },\r\n            templateData: {\r\n                classificationCode: '',\r\n                name: '',\r\n                nameAndLang: [],\r\n                pageBuild: '',\r\n                compont: [],\r\n                note: ''\r\n            },\r\n            rules: {\r\n                name: [\r\n                    { validator: '', trigger: 'blur' }\r\n                ]\r\n            },\r\n            columns: [\r\n                {title: '模版编码',width: 400,key: 'classificationCode',align: 'center'},\r\n                {title: '模版名称',key: 'classificationName',width: 500,align: 'center'},\r\n                {title: '操作',slot: 'action',align: 'center'}\r\n            ],\r\n            columnsConfig: [\r\n                {type: 'selection',width: 54,align: 'center'},\r\n                {title: '数据项编码',key: 'name',align: 'center'},\r\n                {title: '数据项名称',key: 'label',align: 'center'},\r\n                {title: '备注',key: 'note',align: 'note'},\r\n                {title: '是否多条数据项',key: 'isMore',align: 'center', slot: 'isMore'},\r\n                {title: '关联数据项',key: 'relationData',align: 'center', slot: 'relationData'},\r\n                {title: '是否展示',key: 'isShow',align: 'center', slot: 'isShow'},\r\n                {title: '是否编辑',key: 'isEdit',align: 'center', slot: 'isEdit'},\r\n                {title: '提示信息',key: 'message',align: 'center', slot: 'message'},\r\n                {title: '排序值',key: 'sort',align: 'center', slot: 'sort'}\r\n            ],\r\n            configData: [],\r\n            templateList: [],\r\n            // 要删除的模版数据\r\n            deleteData: ''\r\n        }\r\n    },\r\n    mounted () {\r\n        // 初始化调用查询接口\r\n        this.templateDataQuery()\r\n        // 初始化字典数据\r\n        this.initdict()\r\n    },\r\n    methods: {\r\n        // 点击搜索调用查询接口\r\n        dataInit () {\r\n            this.templateDataQuery()\r\n        },\r\n        // 模版数据查询\r\n        templateDataQuery () {\r\n            let params = {\r\n                page: this.templatePage,\r\n                size: this.perpage,\r\n                direction: '',\r\n                properties: '',\r\n                classificationCode: '',\r\n                classificationName: this.searchData.name\r\n            }\r\n            apiTemplateQuery({data: params}).then(res => {\r\n                this.templateList = res.data.content\r\n                this.templateTotal = res.data.totalElements\r\n            })\r\n        },\r\n        // 初始化字典数据\r\n        initdict(){\r\n            let params = {dictionaryTypeKey: 'LANGUAGE_TYPE'}\r\n            apiDictionaryQueryByCacheTypeKey(params).then(res => {\r\n                this.languageType = res.data\r\n                if(res.data && res.data.length>0){\r\n                    res.data.forEach(element => {\r\n                        element[\"il8nLangCode\"] = element.dictionaryKey;\r\n                        element[\"classificationName\"] = \"\";\r\n                    });\r\n                }\r\n                this.templateData.nameAndLang = res.data\r\n            })\r\n            let param = {dictionaryTypeKey: 'WEB_COMPONT'}\r\n            apiDictionaryQueryByCacheTypeKey(param).then(res => {\r\n                console.log(res)\r\n                this.templateData.compont = res.data\r\n            })\r\n        },\r\n        // 新增模版(显示弹窗)\r\n        addTemplate () {\r\n            this.initdict()\r\n            this.isAddTemplateShow = true\r\n        },\r\n        // 二次弹框的显示给父级\r\n        configVisible (isShow) {\r\n            this.isConfigShow = isShow\r\n        },\r\n        templateVisible (isShow) {\r\n            this.isAddTemplateShow = isShow\r\n        },\r\n        modifyVisible (isShow) {\r\n            this.isModifyTemplateShow = isShow\r\n        },\r\n        delTemplateVisible (isShow) {\r\n            this.isDelTemplateShow = isShow\r\n        },\r\n        // 确定绑定配置信息\r\n        configConfirm () {\r\n            console.log(this.configData)\r\n            // apiTemplateRelDataAdd().then(res => {\r\n            //     console.log(res)\r\n            // })\r\n        },\r\n        // 取消绑定配置信息\r\n        configCancel () {\r\n            this.isConfigShow = false\r\n        },\r\n        // 确认新增模版\r\n        templateConfirm () {\r\n            let params = {\r\n                classificationCode: this.templateData.classificationCode,\r\n                nameAndLang: this.templateData.nameAndLang,\r\n                compont: this.templateData.compont.dictionaryValue,\r\n                note: this.templateData.note\r\n            }\r\n            console.log(params)\r\n            // apiTemplateBasicClassificationAdd({data: params}).then(res => {\r\n            //     this.$refs.templateRef.resetFields()\r\n            //     this.isAddTemplateShow = false\r\n            //     this.templateDataQuery()\r\n            // })\r\n        },\r\n        // 取消新增模版\r\n        templateCancel () {\r\n            this.$refs.templateRef.resetFields()\r\n            this.isAddTemplateShow = false\r\n        },\r\n        // 确认修改模版\r\n        modifyConfirm () {\r\n            let params = {\r\n                classificationCode: this.templateData.classificationCode,\r\n                nameAndLang: this.templateData.nameAndLang,\r\n                compont: this.templateData.compont.dictionaryValue,\r\n                note: this.templateData.note\r\n            }\r\n            apiTemplateBasicClassifitionUpdate({data: params}).then(res => {\r\n                console.log(res)\r\n                this.$refs.templateRef.resetFields()\r\n                this.isModifyTemplateShow = false\r\n                this.templateDataQuery()\r\n            })\r\n        },\r\n        // 取消修改模版\r\n        modifyCancel () {\r\n            this.$refs.templateRef.resetFields()\r\n            this.isModifyTemplateShow = false\r\n        },\r\n        // 配置模版弹框数据信息\r\n        configShow (row) {\r\n            this.isConfigShow = true\r\n            let params = {\r\n                page: this.page,\r\n                size: this.perpage,\r\n                direction: '',\r\n                properties: '',\r\n                classificationCode: row.classificationCode,\r\n            }\r\n            apiTemplateRelDataQuery({data: params}).then(res => {\r\n                res.data.content.forEach(element => {\r\n                    console.log(element.checked)\r\n                })\r\n                this.configData = res.data.content\r\n                this.configTotal = res.data.totalElements\r\n            })\r\n        },\r\n        // 修改弹框\r\n        modifyShow (row) {\r\n            let params = {classificationCode: row.classificationCode}\r\n            apiTemplateBasicClassificationQuery(params).then(res=> {\r\n                // 把字典的模版名称写入到模版接口的弹框里面\r\n                this.templateData.classificationCode = res.data.classificationCode\r\n                this.templateData.compont = res.data.compont\r\n                this.templateData.note = res.data.note\r\n                let nameAndLangInterface = {}\r\n                if(res.data.nameAndLang && res.data.nameAndLang.length>0){\r\n                     res.data.nameAndLang.forEach(element => {\r\n                         nameAndLangInterface[element.il8nLangCode] = null == element.classificationName ? \"\" : element.classificationName\r\n                     })\r\n                }\r\n                if(this.languageType && this.languageType.length>0){\r\n                    this.languageType.forEach(element => {\r\n                        element[\"il8nLangCode\"] = element.dictionaryKey\r\n                        element[\"classificationName\"] = nameAndLangInterface[element.dictionaryKey]\r\n                    });\r\n                }\r\n                this.templateData.nameAndLang = this.languageType\r\n            })\r\n            this.isModifyTemplateShow = true\r\n            let param = {dictionaryTypeKey: 'WEB_COMPONT'}\r\n            // 获取页面组建下拉框的数据\r\n            apiDictionaryQueryByCacheTypeKey(param).then(res => {\r\n                this.templateData.compont = res.data\r\n            })\r\n        },\r\n        // 删除模版数据\r\n        delTemplateData (index) {\r\n            let params = {classificationCode: this.deleteData}\r\n            console.log(params)\r\n            delTemplateBasic(params).then(res => {\r\n                this.$Message.info(res.message)\r\n                this.isDelTemplateShow = false\r\n                this.templateDataQuery()\r\n            })\r\n        },\r\n        // 删除弹框\r\n        deleteShow (row) {\r\n            this.isDelTemplateShow = true\r\n            this.deleteData = row.classificationCode\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.template-manage{\r\n    margin: 10px;\r\n    .query-tit{\r\n        .ivu-form-item{\r\n            margin-bottom: 0;\r\n            /deep/.ivu-form-item-label{\r\n                text-align: left;\r\n                padding: 10px 0;\r\n            }\r\n            .ivu-input-wrapper{\r\n                width: 18%;\r\n            }\r\n        }\r\n    }\r\n    .content{\r\n        margin-top: 20px;\r\n        .ivu-icon{\r\n            vertical-align: middle;\r\n            cursor: pointer;\r\n        }\r\n        .ivu-table-wrapper{\r\n            .ivu-table{\r\n                overflow-y: scroll;\r\n            }\r\n        }\r\n        .ivu-icon-ios-options-outline{\r\n            font-size: 20px;\r\n            transform: rotate(-90deg);\r\n            margin-right: 8px;\r\n        }\r\n        .ivu-icon-ios-brush-outline{\r\n            font-size: 20px;\r\n        }\r\n        .ivu-icon-ios-close{\r\n            font-size: 34px;\r\n        }\r\n    }\r\n    /deep/.ivu-modal{\r\n        width: 76%!important;\r\n\r\n    }\r\n    .ivu-select-single .ivu-select-selection .ivu-select-selected-value{\r\n        text-align: left!important;\r\n        padding-left: 0!important;\r\n    }\r\n    .ivu-input{\r\n        font-size: 12px;\r\n    }\r\n    .relevance-data{\r\n        .ivu-table-wrapper{\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n.modal-title{\r\n    width: 100%;\r\n    display: inline-block;\r\n    margin-bottom: 10px;\r\n    .template-name{\r\n        margin-right: 20px;\r\n    }\r\n}\r\n.template-modal{\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    .ivu-form-item{\r\n        margin-bottom: 10px;\r\n    }\r\n    .ivu-input-wrapper{\r\n        width: 90%;\r\n    }\r\n    .template-name{\r\n        /deep/.ivu-form-item-label{\r\n            width: 40px!important;\r\n        }\r\n        .ivu-input-wrapper{\r\n            width: 68%;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=2e797f75&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=2e797f75&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e797f75\",\n  null\n  \n)\n\nexport default component.exports","export default {\r\n    props: {\r\n        page: { default: 1 }\r\n    },\r\n    data () {\r\n        return {\r\n            total: 0,\r\n            perpage: 15\r\n        }\r\n    },\r\n    mounted () {\r\n        this.dataInit()\r\n    },\r\n    watch: {\r\n        $route () {\r\n            this.dataInit()\r\n        }\r\n    },\r\n    methods: {\r\n        paginatorInit (perpage, total) {\r\n            this.perpage = perpage\r\n            this.total = total\r\n        }\r\n    }\r\n}\r\n","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@3.5.3@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=2e797f75&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@3.5.3@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.3.1@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=2e797f75&lang=scss&scoped=true&\"","import { postRequest, getRequest } from './common.js'\r\nimport { mould as baseUrl } from './api'\r\n\r\n//  分页查询模版信息\r\nexport const apiTemplateQuery = (data) => {\r\n    return postRequest(`${baseUrl}/templateBasicClassification/templateBasicClassificationQuery`, data)\r\n}\r\n// 增加模版\r\nexport const apiTemplateBasicClassificationAdd = (data) => {\r\n    return postRequest(`${baseUrl}/templateBasicClassification/templateBasicClassificationAdd`, data)\r\n}\r\n// 通过模板编码查询模板信息\r\nexport const apiTemplateBasicClassificationQuery = (data) => {\r\n    return getRequest(`${baseUrl}/templateBasicClassification/templateBasicClassificationQuery`, data)\r\n}\r\n// 修改模版\r\nexport const apiTemplateBasicClassifitionUpdate = (data) => {\r\n    return postRequest(`${baseUrl}/templateBasicClassification/templateBasicClassifitionUpdate`, data)\r\n}\r\n// 通过模板编码删除模板信息\r\nexport const delTemplateBasic = (data) => {\r\n    return getRequest(`${baseUrl}/templateBasicClassification/templateBasicDel`, data)\r\n}\r\n// 分页查询模板关联数据项弹出窗数据项展示信息\r\nexport const apiTemplateRelDataQuery = (data) => {\r\n    return postRequest(`${baseUrl}/templateBasicClassification/templateRelDataQuery`, data)\r\n}\r\n// 保存模板与数据项关联信息\r\nexport const apiTemplateRelDataAdd = (data) => {\r\n    return postRequest(`${baseUrl}/templateBasicClassification/templateRelDataAdd`, data)\r\n}\r\n\r\n// 分页查询数据项基础信息\r\nexport const apiTemplateDataQuery = (data) => {\r\n    return postRequest(`${baseUrl}/templateData/templateDataQuery`, data)\r\n}\r\n// 增加模板数据项基本信息\r\nexport const apiTemplateDataAdd = (data) => {\r\n    return postRequest(`${baseUrl}/templateData/templateDataAdd`, data)\r\n}\r\n// 通过数据项编码删除数据项信息\r\nexport const apiTemplateDataDel = (data) => {\r\n    return getRequest(`${baseUrl}/templateData/templateDataDel`, data)\r\n}\r\n// 通过数据项编码查询数据项基本信息\r\nexport const getTemplateDataQuery = (data) => {\r\n    return getRequest(`${baseUrl}/templateData/templateDataQuery`, data)\r\n}\r\n// 修改数据项基本信息\r\nexport const apiTemplateDataUpdate = (data) => {\r\n    return postRequest(`${baseUrl}/templateData/templateDataUpdate`, data)\r\n}\r\n","import { postRequest, getRequest } from './common'\r\nimport { dictionary as baseUrl } from './api'\r\n\r\n//  查询所有字典类型列表\r\nexport const apiDictionaryTypeQueryList = (data) => {\r\n    return postRequest(`${baseUrl}/dictionaryType/dictionaryTypeQueryList`, data)\r\n}\r\n\r\n//  新增字典类型信息\r\nexport const apiDictionaryTypeAdd = (path) => {\r\n    return postRequest(`${baseUrl}/dictionaryType/dictionaryTypeAdd`, path)\r\n}\r\n\r\n//  删除字典类型\r\nexport const apiDictionaryTypeDelete = (data) => {\r\n    return getRequest(`${baseUrl}/dictionaryType/dictionaryTypeDelete`, data)\r\n}\r\n\r\n//  根据KEY删除字典类型信息\r\nexport const apiDictionaryTypeDeleteByKey = (data) => {\r\n    return getRequest(`${baseUrl}/dictionaryType/dictionaryTypeDeleteByKey`, data)\r\n}\r\n\r\n//  根据字典类型ID查询字典类型列表\r\nexport const apiDictionaryTypeQueryById = (data) => {\r\n    return getRequest(`${baseUrl}/dictionaryType/dictionaryTypeQueryById`, data)\r\n}\r\n\r\n//  根据字典类型KEY查询字典类型列表\r\nexport const apiDictionaryTypeQueryByKey = (data) => {\r\n    return getRequest(`${baseUrl}/dictionaryType/dictionaryTypeQueryByKey`, data)\r\n}\r\n\r\n//  修改字典类型信息\r\nexport const apiDictionaryTypeUpdate = (data) => {\r\n    return postRequest(`${baseUrl}/dictionaryType/dictionaryTypeUpdate`, data)\r\n}\r\n\r\n//  添加字典\r\nexport const apiDictionaryAdd = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryAdd`, data)\r\n}\r\n\r\n//  删除字典\r\nexport const apiDictionaryDeleteById = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryDeleteByIds`, data)\r\n}\r\n\r\n//  删除类型下所有字典集\r\nexport const apiDictionaryDeleteByTypeKey = (data) => {\r\n    return getRequest(`${baseUrl}/dictionary/dictionaryDeleteByTypeKey`, data)\r\n}\r\n\r\n//  根据字典类型KEY与字典KEY删除某个字典信息\r\nexport const apiDictionaryDeleteByTypeKeyAndKey = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryDeleteByTypeKeyAndKey`, data)\r\n}\r\n\r\n//  根据ID查询字典\r\nexport const apiDictionaryQueryById = (data) => {\r\n    return getRequest(`${baseUrl}/dictionary/dictionaryQueryById`, data)\r\n}\r\n\r\n//  根据KEY查询字典\r\nexport const apiDictionaryQueryByKey = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryQueryByKey`, data)\r\n}\r\n\r\n//  查询字典类型下所有字典(返回集合)\r\nexport const apiDictionaryQueryListByKey = (data) => {\r\n    return getRequest(`${baseUrl}/dictionary/dictionaryQueryListByKey`, data)\r\n}\r\n\r\n//  分页查询字典列表（字典key与字典类型为参数）\r\nexport const apiDictionaryQueryListByKeyAndType = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryQueryListByKeyAndType`, data)\r\n}\r\n\r\n//  修改字典信息\r\nexport const apiDictionaryUpdate = (data) => {\r\n    return postRequest(`${baseUrl}/dictionary/dictionaryUpdate`, data)\r\n}\r\n\r\n// 根据字典类型从缓存获取翻译\r\nexport const apiDictionaryQueryByCacheTypeKey = (data) => {\r\n    return getRequest(`${baseUrl}/dictionaryCommonality/dictionaryQueryByCacheTypeKey`, data)\r\n}\r\n"],"sourceRoot":""}